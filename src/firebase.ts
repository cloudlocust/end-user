import { initializeApp } from 'firebase/app'
import { getMessaging, getToken } from 'firebase/messaging'
import { axios } from 'src/common/react-platform-components'
import {
    REACT_APP_FIREBASE_API_KEY,
    REACT_APP_FIREBASE_APP_ID,
    REACT_APP_FIREBASE_AUTH_DOMAIN,
    REACT_APP_FIREBASE_MESSAGING_SENDER_ID,
    REACT_APP_FIREBASE_PROJECT_ID,
    REACT_APP_FIREBASE_STORAGE_BUCKET,
    REACT_APP_FIREBASE_VAPID_KEY,
} from 'src/configs'
import { AUTH_BASE_URL } from './modules/User/configs'

const firebaseConfig = {
    apiKey: REACT_APP_FIREBASE_API_KEY,
    authDomain: REACT_APP_FIREBASE_AUTH_DOMAIN,
    projectId: REACT_APP_FIREBASE_PROJECT_ID,
    storageBucket: REACT_APP_FIREBASE_STORAGE_BUCKET,
    messagingSenderId: REACT_APP_FIREBASE_MESSAGING_SENDER_ID,
    appId: REACT_APP_FIREBASE_APP_ID,
}

// Initialize Firebase
const firebaseApp = initializeApp(firebaseConfig)
//Access Firebase cloud messaging
const messaging = getMessaging(firebaseApp)

/*
 */
/**
 * This function allows us to get your device token from Firebase, which is required for sending Push notifications to your device.
 *
 * @param onPermissionGranted Callback possibily send the token to backend, when token is generated by firebase.
 * @returns  Get Token From firebase.
 */
export const getTokenFromFirebase = (onPermissionGranted?: () => void) => {
    return getToken(messaging, {
        vapidKey: REACT_APP_FIREBASE_VAPID_KEY,
    }).then(async (currentToken) => {
        if (currentToken)
            // eslint-disable-next-line jsdoc/require-jsdoc
            await axios.post<{
                /**
                 * Firebase device token.
                 */
                deviceToken: string
            }>(`${AUTH_BASE_URL}/users/add-subscriber-device-token`, { deviceToken: currentToken })
    })
}
